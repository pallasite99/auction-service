service: auction-svc

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    AUCTIONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}
  iamRoleStatements:
    # ignore error for VSCode, it is stupid
    # and does not understand that we're trying to import another file here
    - ${file(iam/auctionsTableIAM.yml):auctionsTableIAM}
    - ${file(iam/auctionsBucketIAM.yml):auctionsBucketIAM}

# IaaC for DynamoDB table(s)
resources:
  Resources:
    # ignore error for VSCode, it is stupid
    # and does not understand that we're trying to import another file here
    AuctionsTable: ${file(resources/auctionsTable.yml):AuctionsTable}
    AuctionsBucket: ${file(resources/AuctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicy: ${file(resources/AuctionsBucket.yml):AuctionsBucketPolicy}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      # this facilitates changes in AWS Lambda automatically
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.authorizer}

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}

  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}

  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          authorizer: ${self:custom.authorizer}

  processAuctions:
    handler: src/handlers/processAuctions.handler
    events:
      - schedule: rate(1 minute)

  uploadAuctionPicture:
    handler: src/handlers/uploadAuctionPicture.handler
    events: 
      - http:
          method: PATCH
          path: /auction/{id}/uploadpicture
          authorizer: ${self:custom.authorizer}

custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  AuctionsBucket:
    name: auctions-bucket-a5a5a5-${self:provider.stage}
